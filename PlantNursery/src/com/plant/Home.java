/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.plant;

import com.controller.DbConfig;
import com.controller.FileExporter;
import java.awt.Color;
import java.awt.HeadlessException;
import java.io.File;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTable;
import javax.swing.filechooser.FileNameExtensionFilter;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author amaan
 */
public class Home extends javax.swing.JFrame {

    /**
     * Creates new form Home
     */
    
    //declaration
    Color panedefault;
    Color paneClick;
    
    public Home() {
        initComponents();
        viewPlantTable();

        this.setLocationRelativeTo(null);   //jframe to center
        this.setBackground(new Color(0, 0, 0, 0));       //jframe to transparent background
        {
            panedefault = new Color(255, 255, 255);
            paneClick = new Color(0,204,255);
            lp1.setBackground(paneClick);
            lp2.setBackground(panedefault);
            lp4.setBackground(panedefault);
        }
    }

    void makePanelVisible(JPanel panel) {
        kPlantPanel.setVisible(false);
        kOperationPanel.setVisible(false);
        panel.setVisible(true);
        panel.validate();
    }

    void makeColorVisible(JPanel panel) {
        lp1.setBackground(panedefault);
        lp2.setBackground(panedefault);
        lp4.setBackground(panedefault);
        panel.setBackground(paneClick);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jbtnGrpReport = new javax.swing.ButtonGroup();
        kTopPanel = new com.k33ptoo.components.KGradientPanel();
        jLabel_exitsign = new javax.swing.JLabel();
        jLabelTitle = new javax.swing.JLabel();
        jLabel_minin = new javax.swing.JLabel();
        kLeftPanel = new com.k33ptoo.components.KGradientPanel();
        kGradientPanel1 = new com.k33ptoo.components.KGradientPanel();
        lp1 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        kGradientPanel2 = new com.k33ptoo.components.KGradientPanel();
        lp2 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        kGradientPanel4 = new com.k33ptoo.components.KGradientPanel();
        jLabel14 = new javax.swing.JLabel();
        lp4 = new javax.swing.JPanel();
        jLayeredCenter = new javax.swing.JLayeredPane();
        kPlantPanel = new com.k33ptoo.components.KGradientPanel();
        Search_Label = new javax.swing.JLabel();
        txtSearchPlant = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTablePlant = new javax.swing.JTable();
        kbtnAddPlant = new com.k33ptoo.components.KButton();
        kbtnUpdatePlant = new com.k33ptoo.components.KButton();
        kbtnDeletePlant = new com.k33ptoo.components.KButton();
        kbtnRefreshTable = new com.k33ptoo.components.KButton();
        jLabel1 = new javax.swing.JLabel();
        kOperationPanel = new com.k33ptoo.components.KGradientPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        txtid_op = new javax.swing.JTextField();
        txtname_op = new javax.swing.JTextField();
        txtquantity_op = new javax.swing.JTextField();
        txtamount_op = new javax.swing.JTextField();
        txtseason_op = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtdesc_op = new javax.swing.JTextArea();
        kbtnAddOp = new com.k33ptoo.components.KButton();
        kbtnUpdateOp = new com.k33ptoo.components.KButton();
        kbtnClearOp = new com.k33ptoo.components.KButton();
        jLabel4 = new javax.swing.JLabel();
        kReportPanel = new com.k33ptoo.components.KGradientPanel();
        jRadioPlant_Rp = new javax.swing.JRadioButton();
        jLabel16 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTableReport = new javax.swing.JTable();
        kbtnExportExcel = new com.k33ptoo.components.KButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        kTopPanel.setkEndColor(new java.awt.Color(255, 255, 255));
        kTopPanel.setkStartColor(new java.awt.Color(255, 255, 255));

        jLabel_exitsign.setFont(new java.awt.Font("Segoe UI", 1, 30)); // NOI18N
        jLabel_exitsign.setForeground(new java.awt.Color(255, 0, 102));
        jLabel_exitsign.setText("X");
        jLabel_exitsign.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel_exitsignMousePressed(evt);
            }
        });

        jLabelTitle.setFont(new java.awt.Font("Segoe UI", 3, 24)); // NOI18N
        jLabelTitle.setText("PLANT NURSERY APPLICATION");

        jLabel_minin.setFont(new java.awt.Font("Segoe UI", 1, 60)); // NOI18N
        jLabel_minin.setForeground(new java.awt.Color(0, 204, 0));
        jLabel_minin.setText("-");
        jLabel_minin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel_mininMousePressed(evt);
            }
        });

        javax.swing.GroupLayout kTopPanelLayout = new javax.swing.GroupLayout(kTopPanel);
        kTopPanel.setLayout(kTopPanelLayout);
        kTopPanelLayout.setHorizontalGroup(
            kTopPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, kTopPanelLayout.createSequentialGroup()
                .addContainerGap(648, Short.MAX_VALUE)
                .addComponent(jLabelTitle)
                .addGap(421, 421, 421)
                .addComponent(jLabel_minin)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel_exitsign)
                .addContainerGap())
        );
        kTopPanelLayout.setVerticalGroup(
            kTopPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kTopPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(kTopPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(kTopPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel_exitsign)
                        .addComponent(jLabelTitle))
                    .addComponent(jLabel_minin, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(13, Short.MAX_VALUE))
        );

        getContentPane().add(kTopPanel, java.awt.BorderLayout.PAGE_START);

        kLeftPanel.setkBorderRadius(75);
        kLeftPanel.setkEndColor(new java.awt.Color(0, 204, 255));
        kLeftPanel.setkGradientFocus(-1000);
        kLeftPanel.setkStartColor(new java.awt.Color(255, 255, 255));
        kLeftPanel.setPreferredSize(new java.awt.Dimension(250, 660));

        kGradientPanel1.setkEndColor(new java.awt.Color(102, 255, 255));
        kGradientPanel1.setkGradientFocus(250);
        kGradientPanel1.setkStartColor(new java.awt.Color(153, 204, 255));
        kGradientPanel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                kGradientPanel1MousePressed(evt);
            }
        });

        lp1.setBackground(new Color(0,0,0));
        lp1.setForeground(new Color(0,0,0));
        lp1.setPreferredSize(new java.awt.Dimension(17, 63));

        javax.swing.GroupLayout lp1Layout = new javax.swing.GroupLayout(lp1);
        lp1.setLayout(lp1Layout);
        lp1Layout.setHorizontalGroup(
            lp1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 17, Short.MAX_VALUE)
        );
        lp1Layout.setVerticalGroup(
            lp1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 63, Short.MAX_VALUE)
        );

        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("Plants ");

        javax.swing.GroupLayout kGradientPanel1Layout = new javax.swing.GroupLayout(kGradientPanel1);
        kGradientPanel1.setLayout(kGradientPanel1Layout);
        kGradientPanel1Layout.setHorizontalGroup(
            kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kGradientPanel1Layout.createSequentialGroup()
                .addComponent(lp1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        kGradientPanel1Layout.setVerticalGroup(
            kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lp1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, kGradientPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel11)
                .addGap(14, 14, 14))
        );

        kGradientPanel2.setkEndColor(new java.awt.Color(102, 255, 255));
        kGradientPanel2.setkGradientFocus(250);
        kGradientPanel2.setkStartColor(new java.awt.Color(153, 204, 255));
        kGradientPanel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                kGradientPanel2MousePressed(evt);
            }
        });

        lp2.setBackground(new Color(0,0,0));
        lp2.setForeground(new Color(0,0,0));

        javax.swing.GroupLayout lp2Layout = new javax.swing.GroupLayout(lp2);
        lp2.setLayout(lp2Layout);
        lp2Layout.setHorizontalGroup(
            lp2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 17, Short.MAX_VALUE)
        );
        lp2Layout.setVerticalGroup(
            lp2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jLabel12.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setText("Operation");

        javax.swing.GroupLayout kGradientPanel2Layout = new javax.swing.GroupLayout(kGradientPanel2);
        kGradientPanel2.setLayout(kGradientPanel2Layout);
        kGradientPanel2Layout.setHorizontalGroup(
            kGradientPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kGradientPanel2Layout.createSequentialGroup()
                .addComponent(lp2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        kGradientPanel2Layout.setVerticalGroup(
            kGradientPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kGradientPanel2Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jLabel12)
                .addGap(15, 17, Short.MAX_VALUE))
            .addComponent(lp2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        kGradientPanel4.setkEndColor(new java.awt.Color(102, 255, 255));
        kGradientPanel4.setkGradientFocus(250);
        kGradientPanel4.setkStartColor(new java.awt.Color(153, 204, 255));
        kGradientPanel4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                kGradientPanel4MousePressed(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel14.setText("Report");

        lp4.setBackground(new Color(0,0,0));
        lp4.setForeground(new Color(0,0,0));
        lp4.setPreferredSize(new java.awt.Dimension(17, 0));

        javax.swing.GroupLayout lp4Layout = new javax.swing.GroupLayout(lp4);
        lp4.setLayout(lp4Layout);
        lp4Layout.setHorizontalGroup(
            lp4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 17, Short.MAX_VALUE)
        );
        lp4Layout.setVerticalGroup(
            lp4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout kGradientPanel4Layout = new javax.swing.GroupLayout(kGradientPanel4);
        kGradientPanel4.setLayout(kGradientPanel4Layout);
        kGradientPanel4Layout.setHorizontalGroup(
            kGradientPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, kGradientPanel4Layout.createSequentialGroup()
                .addComponent(lp4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        kGradientPanel4Layout.setVerticalGroup(
            kGradientPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, kGradientPanel4Layout.createSequentialGroup()
                .addContainerGap(17, Short.MAX_VALUE)
                .addComponent(jLabel14)
                .addGap(14, 14, 14))
            .addComponent(lp4, javax.swing.GroupLayout.DEFAULT_SIZE, 63, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout kLeftPanelLayout = new javax.swing.GroupLayout(kLeftPanel);
        kLeftPanel.setLayout(kLeftPanelLayout);
        kLeftPanelLayout.setHorizontalGroup(
            kLeftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kLeftPanelLayout.createSequentialGroup()
                .addGroup(kLeftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(kGradientPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(kGradientPanel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(kGradientPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        kLeftPanelLayout.setVerticalGroup(
            kLeftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kLeftPanelLayout.createSequentialGroup()
                .addGap(68, 68, 68)
                .addComponent(kGradientPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50)
                .addComponent(kGradientPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(54, 54, 54)
                .addComponent(kGradientPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(402, Short.MAX_VALUE))
        );

        getContentPane().add(kLeftPanel, java.awt.BorderLayout.LINE_START);

        jLayeredCenter.setLayout(new java.awt.CardLayout());

        kPlantPanel.setkEndColor(new java.awt.Color(255, 255, 255));
        kPlantPanel.setkStartColor(new java.awt.Color(204, 255, 255));

        Search_Label.setText("Search by Id or Name :");

        txtSearchPlant.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtSearchPlantKeyPressed(evt);
            }
        });

        jTablePlant.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "p_id", "p_name", "p_quantity", "p_amount", "p_desc", "p_growing_season"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTablePlant);

        kbtnAddPlant.setText("Add Plant");
        kbtnAddPlant.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        kbtnAddPlant.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kbtnAddPlantActionPerformed(evt);
            }
        });

        kbtnUpdatePlant.setText("Update Plant");
        kbtnUpdatePlant.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        kbtnUpdatePlant.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kbtnUpdatePlantActionPerformed(evt);
            }
        });

        kbtnDeletePlant.setText("Delete Plant");
        kbtnDeletePlant.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        kbtnDeletePlant.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kbtnDeletePlantActionPerformed(evt);
            }
        });

        kbtnRefreshTable.setText("Refresh Table");
        kbtnRefreshTable.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        kbtnRefreshTable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kbtnRefreshTableActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 3, 24)); // NOI18N
        jLabel1.setText("Search Plant Page");

        javax.swing.GroupLayout kPlantPanelLayout = new javax.swing.GroupLayout(kPlantPanel);
        kPlantPanel.setLayout(kPlantPanelLayout);
        kPlantPanelLayout.setHorizontalGroup(
            kPlantPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kPlantPanelLayout.createSequentialGroup()
                .addGroup(kPlantPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(kPlantPanelLayout.createSequentialGroup()
                        .addGap(69, 69, 69)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1015, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(kPlantPanelLayout.createSequentialGroup()
                        .addGap(143, 143, 143)
                        .addGroup(kPlantPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(kbtnAddPlant, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Search_Label))
                        .addGroup(kPlantPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(kPlantPanelLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtSearchPlant, javax.swing.GroupLayout.PREFERRED_SIZE, 462, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(34, 34, 34)
                                .addComponent(kbtnRefreshTable, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(kPlantPanelLayout.createSequentialGroup()
                                .addGap(143, 143, 143)
                                .addComponent(kbtnUpdatePlant, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(kbtnDeletePlant, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(0, 153, Short.MAX_VALUE))
            .addGroup(kPlantPanelLayout.createSequentialGroup()
                .addGap(408, 408, 408)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        kPlantPanelLayout.setVerticalGroup(
            kPlantPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, kPlantPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(49, 49, 49)
                .addGroup(kPlantPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(kbtnAddPlant, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(kbtnUpdatePlant, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(kbtnDeletePlant, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                .addGroup(kPlantPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(kPlantPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtSearchPlant, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(kbtnRefreshTable, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(Search_Label))
                .addGap(32, 32, 32)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 409, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(108, 108, 108))
        );

        jLayeredCenter.add(kPlantPanel, "card2");

        kOperationPanel.setkEndColor(new java.awt.Color(255, 255, 255));
        kOperationPanel.setkStartColor(new java.awt.Color(204, 255, 255));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel5.setText("ID :");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel6.setText("Name :");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel7.setText("Quantity :");

        jLabel8.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel8.setText("Amount :");

        jLabel9.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel9.setText("Description :");

        jLabel10.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel10.setText("Season :");

        txtdesc_op.setColumns(20);
        txtdesc_op.setRows(5);
        jScrollPane2.setViewportView(txtdesc_op);

        kbtnAddOp.setText("Add");
        kbtnAddOp.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        kbtnAddOp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kbtnAddOpActionPerformed(evt);
            }
        });

        kbtnUpdateOp.setText("Update");
        kbtnUpdateOp.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        kbtnUpdateOp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kbtnUpdateOpActionPerformed(evt);
            }
        });

        kbtnClearOp.setText("Clear");
        kbtnClearOp.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        kbtnClearOp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kbtnClearOpActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Segoe UI", 3, 24)); // NOI18N
        jLabel4.setText("Plant Operations (Add & Update Plant Data)");

        javax.swing.GroupLayout kOperationPanelLayout = new javax.swing.GroupLayout(kOperationPanel);
        kOperationPanel.setLayout(kOperationPanelLayout);
        kOperationPanelLayout.setHorizontalGroup(
            kOperationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, kOperationPanelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel4)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(kOperationPanelLayout.createSequentialGroup()
                .addGap(147, 147, 147)
                .addGroup(kOperationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(kOperationPanelLayout.createSequentialGroup()
                        .addComponent(kbtnAddOp, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(106, 106, 106)
                        .addComponent(kbtnUpdateOp, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(93, 93, 93)
                        .addComponent(kbtnClearOp, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(kOperationPanelLayout.createSequentialGroup()
                        .addGroup(kOperationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel10)
                            .addComponent(jLabel9)
                            .addComponent(jLabel8)
                            .addComponent(jLabel7)
                            .addComponent(jLabel6)
                            .addComponent(jLabel5))
                        .addGap(18, 18, 18)
                        .addGroup(kOperationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 417, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtname_op, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtid_op, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtquantity_op, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtamount_op, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtseason_op, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(493, Short.MAX_VALUE))
        );
        kOperationPanelLayout.setVerticalGroup(
            kOperationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kOperationPanelLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel4)
                .addGap(79, 79, 79)
                .addGroup(kOperationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtid_op, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(kOperationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(txtname_op, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(kOperationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtquantity_op, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addGap(23, 23, 23)
                .addGroup(kOperationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addComponent(txtamount_op, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(kOperationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(kOperationPanelLayout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(jLabel9))
                    .addGroup(kOperationPanelLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(kOperationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10)
                    .addComponent(txtseason_op, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(61, 61, 61)
                .addGroup(kOperationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(kbtnAddOp, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(kbtnUpdateOp, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(kbtnClearOp, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(155, 155, 155))
        );

        jLayeredCenter.add(kOperationPanel, "card5");

        kReportPanel.setkEndColor(new java.awt.Color(255, 255, 255));
        kReportPanel.setkStartColor(new java.awt.Color(204, 255, 255));

        jbtnGrpReport.add(jRadioPlant_Rp);
        jRadioPlant_Rp.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jRadioPlant_Rp.setText("Plants Table");
        jRadioPlant_Rp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioPlant_RpActionPerformed(evt);
            }
        });

        jLabel16.setFont(new java.awt.Font("Segoe UI", 3, 24)); // NOI18N
        jLabel16.setText("Report Page");

        jTableReport.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "p_id", "p_name", "p_quantity", "p_amount", "p_desc", "p_growing_season"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(jTableReport);

        kbtnExportExcel.setText("Export to Excel");
        kbtnExportExcel.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        kbtnExportExcel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kbtnExportExcelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout kReportPanelLayout = new javax.swing.GroupLayout(kReportPanel);
        kReportPanel.setLayout(kReportPanelLayout);
        kReportPanelLayout.setHorizontalGroup(
            kReportPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kReportPanelLayout.createSequentialGroup()
                .addGap(484, 484, 484)
                .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, kReportPanelLayout.createSequentialGroup()
                .addContainerGap(168, Short.MAX_VALUE)
                .addGroup(kReportPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(kReportPanelLayout.createSequentialGroup()
                        .addComponent(jRadioPlant_Rp)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(kbtnExportExcel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(112, 112, 112))
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 1015, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(54, 54, 54))
        );
        kReportPanelLayout.setVerticalGroup(
            kReportPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, kReportPanelLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel16)
                .addGap(54, 54, 54)
                .addGroup(kReportPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRadioPlant_Rp)
                    .addComponent(kbtnExportExcel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(28, 28, 28)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 409, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(180, Short.MAX_VALUE))
        );

        jLayeredCenter.add(kReportPanel, "card5");

        getContentPane().add(jLayeredCenter, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel_exitsignMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel_exitsignMousePressed
        // TODO add your handling code here:
        System.exit(0); //for exut jframe
    }//GEN-LAST:event_jLabel_exitsignMousePressed

    private void kGradientPanel1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_kGradientPanel1MousePressed
        // TODO add your handling code here:
        makePanelVisible(kPlantPanel);
        makeColorVisible(lp1);
    }//GEN-LAST:event_kGradientPanel1MousePressed

    private void kGradientPanel2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_kGradientPanel2MousePressed
        // TODO add your handling code here:
        makePanelVisible(kOperationPanel);
        makeColorVisible(lp2);
    }//GEN-LAST:event_kGradientPanel2MousePressed

    private void kGradientPanel4MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_kGradientPanel4MousePressed
        // TODO add your handling code here:
        makePanelVisible(kReportPanel);
        makeColorVisible(lp4);
    }//GEN-LAST:event_kGradientPanel4MousePressed

    public void viewPlantTable() {
        try {
            Connection con = DbConfig.getConnection();
            PreparedStatement pst = con.prepareStatement("select * from Plants");
            ResultSet rs = pst.executeQuery();
            jTablePlant.setModel(DbUtils.resultSetToTableModel(rs));
            pst.close();
            rs.close();
            con.close();
        } catch (ClassNotFoundException | SQLException e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }

    private void kbtnRefreshTableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kbtnRefreshTableActionPerformed
        // TODO add your handling code here:
        viewPlantTable();
    }//GEN-LAST:event_kbtnRefreshTableActionPerformed

    void searchPlant() {
        String p_season_name = txtSearchPlant.getText();
        try {
            if (p_season_name.matches("^[0-9]+$")) {
                Connection con = DbConfig.getConnection();

                String sql1 = "Select * from PLANTS where p_id LIKE '%" + p_season_name + "%'";
                PreparedStatement ps = con.prepareStatement(sql1);
                ResultSet rs = ps.executeQuery();
                jTablePlant.setModel(DbUtils.resultSetToTableModel(rs));
                rs.close();
                ps.close();
            } else {
                Connection con;
                con = DbConfig.getConnection();
                String sql2 = "Select * from PLANTS where P_NAME LIKE '%" + p_season_name + "%'";
                PreparedStatement ps = con.prepareStatement(sql2);
                ResultSet rs = ps.executeQuery();
                jTablePlant.setModel(DbUtils.resultSetToTableModel(rs));
                rs.close();
                ps.close();
            }
        } catch (ClassNotFoundException | SQLException e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }

    private void txtSearchPlantKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchPlantKeyPressed
        // TODO add your handling code here:
        searchPlant();
    }//GEN-LAST:event_txtSearchPlantKeyPressed

    private void kbtnAddPlantActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kbtnAddPlantActionPerformed
        // TODO add your handling code here:
        makePanelVisible(kOperationPanel);
    }//GEN-LAST:event_kbtnAddPlantActionPerformed

    void plantDataUpdate() {
        try {
            makePanelVisible(kOperationPanel);
            int row = jTablePlant.getSelectedRow();
            String pid = (jTablePlant.getModel().getValueAt(row, 0)).toString();
            String sql = "select * from plants where p_id=" + pid;
            try {
                Connection con = DbConfig.getConnection();
                PreparedStatement ps = (PreparedStatement) con.prepareStatement(sql);
                ResultSet rs = ps.executeQuery();
                while (rs.next()) {
                    txtid_op.setText(rs.getString("p_id"));
                    txtname_op.setText(rs.getString("p_name"));
                    txtquantity_op.setText(rs.getString("p_quantity"));
                    txtamount_op.setText(rs.getString("p_amount"));
                    txtdesc_op.setText(rs.getString("p_desc"));
                    txtseason_op.setText(rs.getString("p_growing_season"));
                }
                rs.close();
                ps.close();
                con.close();
            } catch (ClassNotFoundException | SQLException e) {
                JOptionPane.showMessageDialog(null, e);
            }
        } catch (HeadlessException e) {
            JOptionPane.showMessageDialog(null, "You need to select table row to update plant data");
            kOperationPanel.setVisible(false);
            kPlantPanel.setVisible(true);
            System.out.println(e);
        }
    }

    private void kbtnUpdatePlantActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kbtnUpdatePlantActionPerformed
        // TODO add your handling code here:
        plantDataUpdate();
    }//GEN-LAST:event_kbtnUpdatePlantActionPerformed

    //Plant Update 
    void updatePlantOp() {
        try {
            String t_id = txtid_op.getText();
            String tname = txtname_op.getText();
            String tquantity = txtquantity_op.getText();
            String tamount = txtamount_op.getText();
            String tdesc = txtdesc_op.getText();
            String tseason = txtseason_op.getText();
            String sql = "update PLANTS set P_ID=?, P_NAME=?, P_QUANTITY=?, P_AMOUNT=?, P_DESC=?, P_GROWING_SEASON=? "
                    + "Where P_ID=" + t_id;
            if (!t_id.isEmpty() && !tname.isEmpty() && !tquantity.isEmpty() && !tamount.isEmpty() && !tdesc.isEmpty() && !tseason.isEmpty()) {
                try {
                    Connection con = DbConfig.getConnection();
                    PreparedStatement ps = (PreparedStatement) con.prepareStatement(sql);
                    ps.setString(1, t_id);
                    ps.setString(2, tname);
                    ps.setString(3, tquantity);
                    ps.setString(4, tamount);
                    ps.setString(5, tdesc);
                    ps.setString(6, tseason);
                    int rs = ps.executeUpdate();
                    if (rs != 0) {
                        JOptionPane.showMessageDialog(null, "Plants Data Updated successfully");
                        ps.close();
                        con.close();

                    } else {
                        JOptionPane.showMessageDialog(null, "Updation Unsuccessfull");
                        viewPlantTable();
                    }
                } catch (HeadlessException | ClassNotFoundException | SQLException e) {
                    JOptionPane.showMessageDialog(null, e);
                }
            } else {
                JOptionPane.showMessageDialog(null, "Some Field is Empty");
            }
        } catch (HeadlessException ex) {
            JOptionPane.showMessageDialog(null, "Please try Again" + ex);
        }
    }
    private void kbtnUpdateOpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kbtnUpdateOpActionPerformed
        // TODO add your handling code here:
        updatePlantOp();
    }//GEN-LAST:event_kbtnUpdateOpActionPerformed

    void deletePlantData() {
        int result = JOptionPane.showConfirmDialog(null, "Do You want to Delete Plant?");
        if (JOptionPane.YES_OPTION == result) {
            try {
                int row = jTablePlant.getSelectedRow();
                String cell = jTablePlant.getModel().getValueAt(row, 0).toString();
                String sql = "delete from plants where p_id=" + cell;
                try {
                    Connection con = DbConfig.getConnection();
                    PreparedStatement ps = con.prepareStatement(sql);
                    ps.execute();
                    JOptionPane.showMessageDialog(null, "Plant Data Deleted Successfully");
                    con.close();
                    ps.close();
                    viewPlantTable();
                } catch (HeadlessException | ClassNotFoundException | SQLException e) {
                    JOptionPane.showMessageDialog(null, e);
                    JOptionPane.showMessageDialog(null, "Deletion Unsuccessfull");
                }
            } catch (HeadlessException e) {
                JOptionPane.showMessageDialog(null, "You need to select table row to delete plant data");
                System.out.println(e);
            }
        }
    }
    private void kbtnDeletePlantActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kbtnDeletePlantActionPerformed
        // TODO add your handling code here:
        deletePlantData();
    }//GEN-LAST:event_kbtnDeletePlantActionPerformed

    void clearPlantDataOp() {
        txtid_op.setText("");
        txtname_op.setText("");
        txtquantity_op.setText("");
        txtamount_op.setText("");
        txtdesc_op.setText("");
        txtseason_op.setText("");
    }
    private void kbtnClearOpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kbtnClearOpActionPerformed
        // TODO add your handling code here:
        clearPlantDataOp();
    }//GEN-LAST:event_kbtnClearOpActionPerformed

    /*void addToCart() {
        makePanelVisible(kBillingPanel);
        TableModel pl_model = jTablePlant.getModel();
        int index[] = jTablePlant.getSelectedRows();
        Object[] row = new Object[6];
        DefaultTableModel bill_model = (DefaultTableModel) jTableBill.getModel();
        for (int i = 0; i < index.length; i++) {
            row[0] = pl_model.getValueAt(index[i], 0);
            row[1] = pl_model.getValueAt(index[i], 1);
            row[2] = pl_model.getValueAt(index[i], 2);
            row[3] = pl_model.getValueAt(index[i], 3);
            row[4] = pl_model.getValueAt(index[i], 4);
            row[5] = pl_model.getValueAt(index[i], 5);
        }
        bill_model.addRow(row);
    }*/

    private void jLabel_mininMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel_mininMousePressed
        // TODO add your handling code here:
        this.setState(ICONIFIED);       //for minimize jframe
    }//GEN-LAST:event_jLabel_mininMousePressed

    void exportToExcel() {
        if (jTableReport.getRowCount() > 0) {
            JFileChooser chooser = new JFileChooser();
            FileNameExtensionFilter filter = new FileNameExtensionFilter("Microsoft Excel 97-2003 Worksheet (.xls)", "xls");
            chooser.setFileFilter(filter);
            chooser.setDialogTitle("Save File");
            chooser.setAcceptAllFileFilterUsed(false);
            if (chooser.showSaveDialog(null) == JFileChooser.APPROVE_OPTION) {
                List<JTable> tb = new ArrayList<JTable>();
                List<String> nom = new ArrayList<String>();
                tb.add(jTableReport);
                nom.add("Report");
                String file = chooser.getSelectedFile().toString().concat(".xls");
                try {
                    FileExporter e = new FileExporter(new File(file), tb, nom);
                    if (e.export()) {
                        JOptionPane.showMessageDialog(null, "The data was exported to excel in the selected directory", "Information Message", JOptionPane.INFORMATION_MESSAGE);
                    }
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, "There was a mistake" + e.getMessage(), " Error", JOptionPane.ERROR_MESSAGE);
                }
            }
        } else {
            JOptionPane.showMessageDialog(this, "No data to export ", " Error message", JOptionPane.ERROR_MESSAGE);
        }
    }
    private void kbtnExportExcelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kbtnExportExcelActionPerformed
        // TODO add your handling code here:
        exportToExcel();
    }//GEN-LAST:event_kbtnExportExcelActionPerformed

    private void jRadioPlant_RpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioPlant_RpActionPerformed
        // TODO add your handling code here:
        try {
            Connection con = DbConfig.getConnection();
            PreparedStatement pst = con.prepareStatement("select * from plants");
            ResultSet rs = pst.executeQuery();
            jTableReport.setModel(DbUtils.resultSetToTableModel(rs));
            pst.close();
            rs.close();
            con.close();
        } catch (ClassNotFoundException | SQLException e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_jRadioPlant_RpActionPerformed

    void addPlant() {
        try {
            String pid = txtid_op.getText();
            String pname = txtname_op.getText();
            String pquant = txtquantity_op.getText();
            String pamnt = txtamount_op.getText();
            String pdesc = txtdesc_op.getText();
            String pseason = txtseason_op.getText();
            if (!pid.isEmpty() && !pname.isEmpty() && !pquant.isEmpty() && !pamnt.isEmpty() && !pdesc.isEmpty() && !pseason.isEmpty()) {
                try {
                    Connection con = DbConfig.getConnection();
                    PreparedStatement ps = (PreparedStatement) con.prepareStatement("insert into plants values(?,?,?,?,?,?)");
                    ps.setString(1, pid);
                    ps.setString(2, pname);
                    ps.setString(3, pquant);
                    ps.setString(4, pamnt);
                    ps.setString(5, pdesc);
                    ps.setString(6, pseason);
                    int result = ps.executeUpdate();
                    if (result != 0) {
                        JOptionPane.showMessageDialog(null, "You are Successfully logged in");
                    }
                    ps.close();
                    viewPlantTable();
                    con.close();
                } catch (HeadlessException | ClassNotFoundException | SQLException ex) {
                    Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else {
                JOptionPane.showMessageDialog(null, "Some Fields are Empty");
            }
        } catch (HeadlessException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    private void kbtnAddOpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kbtnAddOpActionPerformed
        // TODO add your handling code here:
        addPlant();
    }//GEN-LAST:event_kbtnAddOpActionPerformed

    /*void makeReceipt(){
        int total_sum = 0;
        for (int i = 0; i < jTableBill.getRowCount(); i++) {
            int req_quant = Integer.parseInt(jTableBill.getValueAt(i, 6).toString());
            int avail_quant = Integer.parseInt(jTableBill.getValueAt(i, 3).toString());
            if(avail_quant < req_quant) {
                JOptionPane.showMessageDialog(null, "required quantity is always lesser than or equalt to available plants");
            }
            else if (avail_quant==0 || req_quant == 0 ){
                JOptionPane.showMessageDialog(null, "Your available plant quantity is Zero");
            }
            else if (avail_quant >= req_quant){
            total_sum += req_quant * avail_quant;
            }
        }
        jtxtTotalAmnt.setText(Integer.toString(total_sum));
    }*/
    
    /*void makePayment() {
        try {
            DefaultTableModel payment_model = (DefaultTableModel) jTableBill.getModel();
            int index[] = jTableBill.getSelectedRows();
            Object[] col = new Object[7];
            for (int i = 0; i < index.length; i++) {
                col[0] = payment_model.getValueAt(index[i], 0);
                col[1] = payment_model.getValueAt(index[i], 1);
                col[2] = payment_model.getValueAt(index[i], 2);
                col[3] = payment_model.getValueAt(index[i], 3);
                col[4] = payment_model.getValueAt(index[i], 4);
                col[5] = payment_model.getValueAt(index[i], 5);
                col[6] = payment_model.getValueAt(index[i], 6);
            }
            if (col[6] != null) {
                Connection con = DbConfig.getConnection();
                PreparedStatement ps1 = (PreparedStatement) con.prepareStatement("select * from plants where p_name = ?");
                ps1.setString(1, col[1].toString());
                ResultSet rst1 = ps1.executeQuery();
                if (rst1.next()) {
                    int re_qnty = Integer.parseInt((String) col[6]);
                    if (rst1.getInt("p_quantity") >= re_qnty) {
                        PreparedStatement ps2 = (PreparedStatement) con.prepareStatement("update plants set p_quantity=p_quantity - ? where p_name=?");
                        ps2.setInt(1, Integer.parseInt((String) col[6]));
                        ps2.setString(2, col[1].toString());
                        int rst2 = ps2.executeUpdate();
                        if (rst2 != 0) {
                            PreparedStatement ps3 = (PreparedStatement) con.prepareStatement("select * from plants where p_name=?");
                            ps3.setString(1, col[1].toString());
                            ResultSet rst3 = ps3.executeQuery();
                            if (rst3.next()) {
                                int remain = rst3.getInt("p_quantity");
                                int amount = rst3.getInt("p_amount");
                                JOptionPane.showMessageDialog(null, "Your Ordered Quantity: " + col[6].toString() + ".\n Now Remaining Quantity: " + remain + " \n Total Amount :" + (amount * re_qnty) + "");
                                JOptionPane.showMessageDialog(null, "Order Sucessfull!!!");
                                int selected_row = jTableBill.getSelectedRow();
                                payment_model.removeRow(selected_row);
                            }
                            con.close();
                            viewPlantTable();
                        }
                    } else {
                        JOptionPane.showMessageDialog(null, "Entered quantity is not in stock range .");
                        int selected_row = jTableBill.getSelectedRow();
                        payment_model.removeRow(selected_row);
                    }
                }
            } else {
                JOptionPane.showMessageDialog(null, "Please Enter quantity you want to Make the Bill .");
            }
        } catch (HeadlessException | ClassNotFoundException | NumberFormatException | SQLException e) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, e);
        }
    }*/
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */

        //</editor-fold>
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new Home().setVisible(true);

            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Search_Label;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelTitle;
    private javax.swing.JLabel jLabel_exitsign;
    private javax.swing.JLabel jLabel_minin;
    private javax.swing.JLayeredPane jLayeredCenter;
    private javax.swing.JRadioButton jRadioPlant_Rp;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTable jTablePlant;
    private javax.swing.JTable jTableReport;
    private javax.swing.ButtonGroup jbtnGrpReport;
    private com.k33ptoo.components.KGradientPanel kGradientPanel1;
    private com.k33ptoo.components.KGradientPanel kGradientPanel2;
    private com.k33ptoo.components.KGradientPanel kGradientPanel4;
    private com.k33ptoo.components.KGradientPanel kLeftPanel;
    private com.k33ptoo.components.KGradientPanel kOperationPanel;
    private com.k33ptoo.components.KGradientPanel kPlantPanel;
    private com.k33ptoo.components.KGradientPanel kReportPanel;
    private com.k33ptoo.components.KGradientPanel kTopPanel;
    private com.k33ptoo.components.KButton kbtnAddOp;
    private com.k33ptoo.components.KButton kbtnAddPlant;
    private com.k33ptoo.components.KButton kbtnClearOp;
    private com.k33ptoo.components.KButton kbtnDeletePlant;
    private com.k33ptoo.components.KButton kbtnExportExcel;
    private com.k33ptoo.components.KButton kbtnRefreshTable;
    private com.k33ptoo.components.KButton kbtnUpdateOp;
    private com.k33ptoo.components.KButton kbtnUpdatePlant;
    private javax.swing.JPanel lp1;
    private javax.swing.JPanel lp2;
    private javax.swing.JPanel lp4;
    private javax.swing.JTextField txtSearchPlant;
    private javax.swing.JTextField txtamount_op;
    private javax.swing.JTextArea txtdesc_op;
    private javax.swing.JTextField txtid_op;
    private javax.swing.JTextField txtname_op;
    private javax.swing.JTextField txtquantity_op;
    private javax.swing.JTextField txtseason_op;
    // End of variables declaration//GEN-END:variables
}
